=begin
#Microsoft Bot Connector API - v3.0

#The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)    Â© 2016 Microsoft

OpenAPI spec version: v3
Contact: botframework@microsoft.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

# Common files
require 'bot_framework/api_client'
require 'bot_framework/api_error'
require 'bot_framework/version'
require 'bot_framework/configuration'

# Models
require 'bot_framework/models/action_types'
require 'bot_framework/models/activity'
require 'bot_framework/models/activity_importance'
require 'bot_framework/models/activity_types'
require 'bot_framework/models/animation_card'
require 'bot_framework/models/attachment'
require 'bot_framework/models/attachment_data'
require 'bot_framework/models/attachment_info'
require 'bot_framework/models/attachment_layout_types'
require 'bot_framework/models/attachment_view'
require 'bot_framework/models/audio_card'
require 'bot_framework/models/basic_card'
require 'bot_framework/models/card_action'
require 'bot_framework/models/card_image'
require 'bot_framework/models/channel_account'
require 'bot_framework/models/contact_relation_update_action_types'
require 'bot_framework/models/conversation_account'
require 'bot_framework/models/conversation_members'
require 'bot_framework/models/conversation_parameters'
require 'bot_framework/models/conversation_reference'
require 'bot_framework/models/conversation_resource_response'
require 'bot_framework/models/conversations_result'
require 'bot_framework/models/delivery_modes'
require 'bot_framework/models/end_of_conversation_codes'
require 'bot_framework/models/entity'
require 'bot_framework/models/error'
require 'bot_framework/models/error_response'
require 'bot_framework/models/fact'
require 'bot_framework/models/geo_coordinates'
require 'bot_framework/models/hero_card'
require 'bot_framework/models/inner_http_error'
require 'bot_framework/models/input_hints'
require 'bot_framework/models/installation_update_action_types'
require 'bot_framework/models/media_card'
require 'bot_framework/models/media_event_value'
require 'bot_framework/models/media_url'
require 'bot_framework/models/mention'
require 'bot_framework/models/message_reaction'
require 'bot_framework/models/message_reaction_types'
require 'bot_framework/models/microsoft_pay_method_data'
require 'bot_framework/models/o_auth_card'
require 'bot_framework/models/paged_members_result'
require 'bot_framework/models/payment_address'
require 'bot_framework/models/payment_currency_amount'
require 'bot_framework/models/payment_details'
require 'bot_framework/models/payment_details_modifier'
require 'bot_framework/models/payment_item'
require 'bot_framework/models/payment_method_data'
require 'bot_framework/models/payment_options'
require 'bot_framework/models/payment_request'
require 'bot_framework/models/payment_request_complete'
require 'bot_framework/models/payment_request_complete_result'
require 'bot_framework/models/payment_request_update'
require 'bot_framework/models/payment_request_update_result'
require 'bot_framework/models/payment_response'
require 'bot_framework/models/payment_shipping_option'
require 'bot_framework/models/place'
require 'bot_framework/models/receipt_card'
require 'bot_framework/models/receipt_item'
require 'bot_framework/models/resource_response'
require 'bot_framework/models/role_types'
require 'bot_framework/models/semantic_action'
require 'bot_framework/models/semantic_action_states'
require 'bot_framework/models/signin_card'
require 'bot_framework/models/suggested_actions'
require 'bot_framework/models/text_format_types'
require 'bot_framework/models/text_highlight'
require 'bot_framework/models/thing'
require 'bot_framework/models/thumbnail_card'
require 'bot_framework/models/thumbnail_url'
require 'bot_framework/models/token_request'
require 'bot_framework/models/token_response'
require 'bot_framework/models/transcript'
require 'bot_framework/models/video_card'

# APIs
require 'bot_framework/api/attachments_api'
require 'bot_framework/api/conversations_api'

module BotFramework
  class << self
    # Customize default settings for the SDK using block.
    #   BotFramework.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
